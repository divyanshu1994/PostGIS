<% layout('layout') %>

Welcome 
<label id="name" ><%= user %></label><br>



Location : 
<label id="lat" >Lat</label>
<label id="lng" >Long</label>
<br>
Travelling in : <label id="district"> Distrcit </label>
<br>
<hr>

<div class="row">
<div class="col-md-6 panel panel-info">
  <div class="panel-heading">Map</div>
<div class="panel-body" style="width:100%;height:500px" id="map"></div>
</div>
<div class="col-md-6">
  <div id="control text-center" class="row" style="width:85px;margin:auto">
  <h4>Controller</h4>
    <div class="row text-center" style="font-size:30px;color:blue"><i id="up" class="glyphicon glyphicon-arrow-up " style="cursor: pointer" ></i></div>
    <div class="row " style="font-size:30px;color:blue">
      <i id="left" class="glyphicon glyphicon-arrow-left " style="cursor: pointer"></i>
      <i  class="glyphicon glyphicon-unchecked " style="margin-left:6px"></i>
            <i id="right" class="glyphicon glyphicon-arrow-right " style="cursor: pointer"></i>
    </div>
    <div class="row text-center" style="font-size:30px;color:blue"><i id="down" class="glyphicon glyphicon-arrow-down"  style="cursor: pointer"></i></div>
  </div>
 Nearby Places ( upto <input id="nearby_distance" style="padding:5px" size="4" value="20"> miles)  <button  id="set_nearby">OK</button>
<hr>
<table id="nearby_table"></table>
</div>
</div>

<script>
       var map;
       var marker;
      function initMap() {

       
        // Create a map object and specify the DOM element for display.
        map=new google.maps.Map(document.getElementById('map'), {
          center: {lat:  28.6, lng: 77.1},
          scrollwheel: true,
          zoom: 10
        });

        var icon = {
        url: "/circle.ico", // url
        scaledSize: new google.maps.Size(70, 70), // scaled size
        origin: new google.maps.Point(0,0), // origin
        anchor: new google.maps.Point(35, 70) // anchor
        };

         marker = new google.maps.Marker({
          animation: google.maps.Animation.DROP,
          map: map,
          icon:icon,
          title: 'Hello World!'
        });

// place mapItems from server to page
<% if(mapItems)  {  %>
<% for(var a=0;a<mapItems.length;a++)  {  %>
<% var features= mapItems[a].features;  %>

        <% if(features)  {  %>
<% for (var i=0;i<features.length;i++) { %>

    <% var geom=features[i].geometry ;
       var the_geom=JSON.parse(geom) ;
       var type= the_geom.type;
       var coordinates=the_geom.coordinates
       
        %>

        
 <% if(type=="Point")  {   %>   // fro point
       <% var coord=coordinates.toString().split(",");
            var lat=coord[1];
            var lon=coord[0];
        %>

          var icon = {
        url: "/places.png", // url
        scaledSize: new google.maps.Size(35, 35), // scaled size
        origin: new google.maps.Point(0,0), // origin
        anchor: new google.maps.Point(17, 35) // anchor
        };

        
        var myLatLng = {lat: <%= lat %>, lng: <%= lon %>};
       console.log("Lat "+<%=lat %> +" Long "+<%=lon %>);
          var mark = new google.maps.Marker({
          position: myLatLng,
          map: map,
          icon:icon,
          title: 'Hello World!'
        });

    <% }  %>   
        
    <% if(type=="MultiPolygon")  {  %>
var polycoords=[];
      <%  var coords=coordinates[0][0];  %>

       <% for(var j=0;j<coords.length;j++) {  %>
       <% var c=coords[j].toString().split(",") ;
          var p_lat=c[1]  ; var p_long=c[0];
        %>
          polycoords.push({
            lat:<%= p_lat  %>,
            lng:<%= p_long  %>
          });

    <%  } %>

     var Polygons = new google.maps.Polygon({
          paths: polycoords,
          strokeColor: '#FF0000',
          strokeOpacity: 0.8,
          strokeWeight: 3,
          fillColor: '#FF00FF',
          fillOpacity: 0.35,
          map:map
        });
      


      <%  }   %>

      <% } }  %>

      <%  } }  %>

      myLatlng = new google.maps.LatLng(28.6,77);
        marker.setPosition(myLatlng);
      }

      // coding for user marker to smoothly move from one point to another
      var prevlat=28.6;
      var prevlong=77;
      var frames=[];

      function makeFrames(lat,long)
      {
        for(var p=0;p<1;p+=0.01)
        {
          lt=prevlat+p*(lat-prevlat);
          lon=prevlong+p*(long-prevlong);

          mygeo = new google.maps.LatLng(lt,lon);

          frames.push(mygeo);

        }
      }
      function moveMarker(lat,long)
      {
        console.log("Moving marker !!!!!!!!!!!!!!!!!!!!!!!"+lat+"  "+long);

        makeFrames(lat,long);
        animate(marker,frames,0,20);

        prevlat=lat;
        prevlong=long;
        frames=[];
        // myLatlng = new google.maps.LatLng(lat,long);
        // marker.setPosition(myLatlng);
        }

        function animate(marker,frames,index,delay)
        {
            marker.setPosition(frames[index]);

            if(index!=frames.length-1)
            {
            setTimeout(function(){
              index=index+1;
              animate(marker,frames,index,delay)
            });
            }
            else
            {
              return;
            }
        }
     </script>
 <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBwyEhjv2fqbFCmqd4hUG9zoH0-qsV8E18&callback=initMap"
    async defer></script>

                         <script src="/js/rt.js"></script>
